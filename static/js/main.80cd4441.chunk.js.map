{"version":3,"sources":["serviceWorker.js","store/reducers/errorReducer.js","store/actions/actionTypes.js","store/reducers/paginationReducer.js","store/reducers/showReducer.js","store/reducers/sortReducer.js","store/reducers/searchReducer.js","store/reducers/index.js","store/store.js","components/AppTitle/AppTitle.js","components/Container/Container.js","config/TMDB-config.js","config/keys.js","config/trakt-api-config.js","store/actions/searchActions.js","components/SearchTable/TableHeader/TableHeader.js","components/SearchTable/ShowsList/Show/Show.js","components/SearchTable/ShowsList/ShowsList.js","components/common/Spinner/Spinner.js","components/common/SearchField/SearchField.js","components/SearchTable/SearchTable.js","containers/Search/Search.js","components/Pagination/PaginationItem/PaginationItem.js","components/Pagination/Pagination.js","components/Filters/Filters.js","components/Table/TableHeader/TableHeader.js","components/Table/ShowsList/Show/Show.js","components/Table/ShowsList/ShowsList.js","components/Table/Table.js","containers/Sorting/Sorting.js","store/actions/showsActions.js","store/actions/paginationActions.js","store/actions/sortActions.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","errors","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","page","itemsPerPage","amountOfPages","amountOfPaginationLinks","pagesAmount","limit","shows","loading","showsWithPoster","category","ratings","status","years","defineProperty","name","value","query","searchShows","searching","result","combineReducers","errorReducer","pagination","paginationReducer","showReducer","sorting","sortReducer","search","searchReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","appTitle","react_default","a","createElement","container","props","className","children","idPosterConfig","posterConfig","traktConfig","method","headers","Headers","Content-Type","trakt-api-key","trakt-api-version","setSearchQuery","searchShowsStart","searchShowsSuccess","tableHeader","show","number","src","poster","alt","title","width","height","year","showsList","Fragment","map","index","Show","key","spinner","searchField","onSubmit","onSubmitHandler","id","placeholder","onChange","onChangeHandler","htmlFor","withRouter","_props$search","table","TableHeader","ShowsList","Spinner","SearchField","onSearchInputChangeHandler","onSubmitSearchHandler","Search","evt","preventDefault","_this","history","push","concat","setState","target","this","split","nextProps","react_router_dom","to","SearchTable","Component","connect","dispatch","fetch","then","res","json","showArray","posterPromises","posterUrl","ids","tmdb","response","Promise","all","resArray","showsWithPosters","filePath","posters","file_path","getPosterUrl","catch","err","paginationItem","classnames","Pagination__link--active","currentPage","onClick","lastPage","_props$pagination","linksAmount","style","margin","marginRight","display","flexDirection","alignItems","onChangeNadler","Pagination__link--disabled","onClickHandler","Array","fill","PaginationItem","reverse","filters","currentYear","Date","getFullYear","onFilterChangeHadnler","values","item","description","overview","slice","aired_episodes","rating","toFixed","genres","join","Show_Show","TableHeader_TableHeader","ShowsList_ShowsList","Sorting","onFilterChangeHandler","_evt$target","setCurrentPage","setSortingFilters","encodeURIComponent","onPaginationSelectChangeHandler","isUpdated","setCurrentLimit","_this$props$paginatio","_this$props$sorting","showType","objectWithoutProperties","queryString","console","log","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","queryParameter","replace","decodeURIComponent","return","fetchShows","_nextProps$pagination","_nextProps$sorting","filtersString","_i","_Object$keys","keys","filter","_i2","_Object$keys2","_i3","_Object$keys3","_this$props$shows","content","Filters","Pagination","Table","sortUrl","entries","header","from","fetchPosters","sortShows","App","es","Container","AppTitle","react_router","path","exact","component","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80cd4441.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_ERRORS } from \"../actions/actionTypes\";\n\nconst initialState = {\n    errors: null\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n          ...state,\n          errors: action.errors\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// showReducer\nexport const FETCH_SHOWS_INFO_START = 'FETCH_SHOWS_INFO_START';\nexport const FETCH_SHOWS_SUCCESS = 'FETCH_SHOWS_SUCCESS';\nexport const FETCH_SHOWS_INFO_FAILED = 'FETCH_SHOWS_INFO_FAILED';\nexport const SORT_SHOWS = 'SORT_SHOWS';\n\n// Posters\nexport const FETCH_POSTER_SUCCESS = 'FETCH_POSTERS_SUCCESS';\n\n// Pagination\nexport const GET_AMOUNT_OF_PAGES = 'GET_AMOUNT_OF_PAGES';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const SET_CURRENT_LIMIT = 'SET_CURRENT_LIMIT';\n\n// sortReducer\nexport const SET_SORTING_FILTERS = 'SET_SORTING_FILTERS';\n\n// searchReducer\nexport const SET_SEARCH_QUERY = 'SET_SEARCH_QUERY';\nexport const SEARCH_SHOWS_START = 'SEARCH_SHOWS_START';\nexport const SEARCH_SHOWS_FAILED = 'SEARCH_SHOWS_FAILED';\nexport const SEARCH_SHOWS_SUCCESS = 'SEARCH_SHOWS_SUCCESS';\n\n// errorReducer\nexport const GET_ERRORS = 'GET_ERRORS';","import {\n  GET_AMOUNT_OF_PAGES,\n  SET_CURRENT_PAGE,\n  SET_CURRENT_LIMIT\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  page: 1,\n  itemsPerPage: 10,\n  amountOfPages: null,\n  amountOfPaginationLinks: 5\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_AMOUNT_OF_PAGES:\n      return {\n        ...state,\n        amountOfPages: action.pagesAmount\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        page: action.page\n      };\n    case SET_CURRENT_LIMIT:\n      return {\n        ...state,\n        itemsPerPage: action.limit\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  FETCH_SHOWS_INFO_FAILED,\n  FETCH_SHOWS_SUCCESS,\n  FETCH_SHOWS_INFO_START,\n  FETCH_POSTER_SUCCESS,\n  SORT_SHOWS\n} from \"../actions/actionTypes\";\n\n\nconst initialState = {\n  shows: null,\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SHOWS_INFO_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_SHOWS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        shows: action.shows\n      };\n    case FETCH_SHOWS_INFO_FAILED:\n      return {\n        ...state,\n        loading: false\n      };\n    case FETCH_POSTER_SUCCESS:\n      return {\n        ...state,\n        shows: action.showsWithPoster,\n        loading: false\n      };\n      case SORT_SHOWS:\n      return {\n        ...state,\n        shows: action.shows\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { SET_SORTING_FILTERS } from \"../actions/actionTypes\";\n\nconst initialState = {\n  category: \"trending\",\n  ratings: \"75-100\",\n  status: \"returning series\",\n  years: 2019\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SORTING_FILTERS:\n      return {\n        ...state,\n        [action.name]: action.value\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  SET_SEARCH_QUERY,\n  SEARCH_SHOWS_START,\n  SEARCH_SHOWS_FAILED,\n  SEARCH_SHOWS_SUCCESS\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  query: \"\",\n  searchShows: null,\n  searching: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SEARCH_QUERY:\n      return {\n        ...state,\n        query: action.query\n      };\n    case SEARCH_SHOWS_START:\n      return {\n        ...state,\n        searching: true\n      };\n    case SEARCH_SHOWS_SUCCESS:\n      return {\n        ...state,\n        searching: false,\n        searchShows: action.result\n      };\n    case SEARCH_SHOWS_FAILED:\n      return {\n        ...state,\n        searching: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport errorReducer from './errorReducer';\nimport paginationReducer from './paginationReducer';\nimport showReducer from './showReducer';\nimport sortReducer from './sortReducer';\nimport searchReducer from './searchReducer';\n\nexport default combineReducers({\n    errors: errorReducer,\n    pagination: paginationReducer,\n    shows: showReducer,\n    sorting: sortReducer,\n    search: searchReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React from \"react\";\n\nconst appTitle = () => {\n  return <h1>TV shows</h1>;\n};\n\nexport default appTitle;\n","import React from \"react\";\n\nconst container = props => {\n  return <div className=\"Container\">{props.children}</div>;\n};\n\nexport default container;\n","import {apiKeyTMDB} from './keys';\n \n// get poster id\nexport const idPosterConfig = {\n  apiKeyTMDB,\n  baseUrl: \"https://api.themoviedb.org/3/tv/\"\n};\n\n// config for poster url\nexport const posterConfig = {\n  baseUrl: \"https://image.tmdb.org/t/p/\",\n  posterSize: \"original\"\n};\n","export const apiKeyTMDB = \"292dfb087089a0d1e06fb7645766b94b\";\nexport const   traktApiKey = \"a158772b33a2b5a08074d228e73c04e1e0967525fea9db31504a8df87902623a\";","import {traktApiKey} from './keys';\n\nconst headers = new Headers({\n  \"Content-Type\": \"application/json\",\n  \"trakt-api-key\": traktApiKey,\n  \"trakt-api-version\": \"2\"\n});\n\nexport const traktConfig = {\n  method: \"GET\",\n  headers\n};\n\nexport const baseUrl = 'https://api.trakt.tv/shows/';\nexport const searchUrl = 'https://api.trakt.tv/search/show?query=';\n","import {\n  SET_SEARCH_QUERY,\n  SEARCH_SHOWS_START,\n  SEARCH_SHOWS_FAILED,\n  SEARCH_SHOWS_SUCCESS,\n  GET_ERRORS\n} from \"./actionTypes\";\n\nimport {idPosterConfig, posterConfig} from '../../config/TMDB-config';\n\n\nimport { traktConfig, searchUrl } from \"../../config/trakt-api-config\";\n\nexport const setSearchQuery = query => {\n  return {\n    type: SET_SEARCH_QUERY,\n    query\n  };\n};\n\nexport const searchShowsStart = () => {\n  return {\n    type: SEARCH_SHOWS_START\n  };\n};\n\nconst searchShowsSuccess = result => {\n  return {\n    type: SEARCH_SHOWS_SUCCESS,\n    result\n  };\n};\n\nconst searchShowsFailed = () => {\n  return {\n    type: SEARCH_SHOWS_FAILED\n  };\n};\n\nconst fetchPosters = shows => {\n  return dispatch => {\n    // Create array of Promises to fetch posters\n    const posterPromises = shows.map(show => {\n      //create url with poster id\n      let posterUrl = `${idPosterConfig.baseUrl}${\n        show.ids.tmdb\n      }/images?api_key=${idPosterConfig.apiKeyTMDB}`;\n      return fetch(posterUrl).then(response => response.json());\n    });\n    Promise.all(posterPromises)\n      .then(resArray => {\n        // Add poster property to show object\n        const showsWithPosters = shows.map((show, index) => {\n          const filePath = resArray[index].posters[0].file_path;\n          // Create url with poster\n          const getPosterUrl = `${posterConfig.baseUrl}${\n            posterConfig.posterSize\n          }/${filePath}`;\n          show.poster = getPosterUrl;\n          return show;\n        });\n        dispatch(searchShowsSuccess(showsWithPosters));\n      })\n      .catch(err => {\n        dispatch(searchShowsFailed());\n        dispatch({\n          type: GET_ERRORS,\n          errors: `Can not get posters from TMDB api`\n        });\n      });\n  };\n};\n\nexport const searchShows = query => dispatch => {\n  dispatch(searchShowsStart);\n  fetch(`${searchUrl}${query}`, traktConfig)\n    .then(res => res.json())\n    .then(showArray => {\n      showArray = showArray.map(show => show.show);\n      dispatch(searchShowsSuccess(showArray));\n      dispatch(fetchPosters(showArray));\n    })\n    .catch(err => {\n      dispatch(searchShowsFailed());\n      dispatch({\n        type: GET_ERRORS,\n        errors: \"Can not find anything\"\n      });\n    });\n};\n","import React from \"react\";\n\nconst tableHeader = (props) => {\n  return (\n    <thead>\n      <tr className=\"Table__tr\">\n        <th className=\"Table__th\">Number</th>\n        <th className=\"Table__th\">Poster</th>\n        <th className=\"Table__th\">Title</th>\n        <th className=\"Table__th\">Year</th>\n      </tr>\n    </thead>\n  );\n};\n\nexport default tableHeader;\n","import React from \"react\";\n\nconst show = props => {\n  const defaultPoster =\n    \"https://st.kp.yandex.net/images/movies/poster_none.png\";\n  return (\n    <tr className=\"Table__tr\">\n      <td className=\"Table__td\">{props.number}</td>\n      <td className=\"Table__td\">\n        <img\n          src={props.show.poster ? props.show.poster : defaultPoster}\n          alt={props.show.title}\n          width=\"200\"\n          height=\"200\"\n        />\n      </td>\n      <td className=\"Table__td\">{props.show.title}</td>\n      <td className=\"Table__td\">{props.show.year}</td>\n    </tr>\n  );\n};\n\nexport default show;\n","import React from \"react\";\nimport Show from \"./Show/Show\";\n\nconst showsList = props => {\n  return (\n    <React.Fragment>\n      {props.shows.map((show, index) => (\n        <Show key={index} number={index + 1} show={show} />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default showsList;\n","import React from \"react\";\n\nconst spinner = () => {\n  return (\n    <div className=\"Spinner\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default spinner;\n","import React from \"react\";\n\nconst searchField = props => {\n  return (\n    <form className=\"SearchField\" onSubmit={props.onSubmitHandler}>\n      <input\n        className=\"SearchField__input\"\n        type=\"search\"\n        id=\"search-input\"\n        placeholder=\"Search show\"\n        value={props.value}\n        onChange={props.onChangeHandler}\n      />\n      <label htmlFor=\"search-input\">\n        <span className=\"visually-hidden\">Search</span>\n      </label>\n    </form>\n  );\n};\n\nexport default searchField;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport ShowList from \"./ShowsList/ShowsList\";\nimport Spinner from \"../common/Spinner/Spinner\";\nimport SearchField from \"../common/SearchField/SearchField\";\n\nconst searchTable = props => {\n  const { searching, searchShows } = props.search;\n  let table = (\n    <React.Fragment>\n      <table className=\"Table\">\n        <TableHeader />\n        <tbody>\n          <ShowList shows={searchShows} />\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n  if (searching || searchShows === null) {\n    table = <Spinner />;\n  }\n\n  if (props.search.query === \"\") {\n    table = (\n      <React.Fragment>\n        <p>'Search something...'</p>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div>\n      <SearchField\n        onChangeHandler={props.onSearchInputChangeHandler}\n        onSubmitHandler={props.onSubmitSearchHandler}\n        value={props.value}\n      />\n      {table}\n    </div>\n  );\n};\n\nexport default withRouter(searchTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { searchShows, setSearchQuery } from \"../../store/actions/searchActions\";\n\nimport SearchTable from \"../../components//SearchTable/SearchTable\";\n\nclass Search extends Component {\n  state = {\n    search: \"\"\n  };\n\n  componentDidMount() {\n    let query = this.props.location.search.split(\"=\")[1];\n    if (!query) {\n      query = this.props.search.query;\n    }\n    this.props.setSearchQuery(query);\n    this.props.searchShows(query);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.search.query !== this.props.search.query) {\n      this.props.searchShows(nextProps.search.query);\n    }\n  }\n\n  onSubmitSearchHandler = evt => {\n    evt.preventDefault();\n    const { search } = this.state;\n    this.props.setSearchQuery(search);\n    this.props.history.push(`/search?query=${search}`);\n    this.setState({ search: \"\" });\n  };\n\n  onSearchInputChangeHandler = evt => {\n    evt.preventDefault();\n    this.setState({ search: evt.target.value });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <NavLink to=\"/\" className=\"back-button\">\n          Back\n        </NavLink>\n        <SearchTable\n          search={this.props.search}\n          loading={this.props.loading}\n          onSubmitSearchHandler={this.onSubmitSearchHandler}\n          onSearchInputChangeHandler={this.onSearchInputChangeHandler}\n          value={this.state.search}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  search: state.search,\n  loading: state.shows\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchShows, setSearchQuery }\n)(Search);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nconst paginationItem = props => {\n  return (\n    <li className=\"Pagination__item\">\n      <Link\n        className={classnames(\"Pagination__link\", {\n          \"Pagination__link--active\": props.page === props.currentPage\n        })}\n        to={props.page !== 1 ? \"/?page=\" + props.page : \"/\"}\n        onClick={() => props.onClick(props.page)}\n      >\n        {props.page}\n      </Link>\n    </li>\n  );\n};\n\nexport default paginationItem;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport PaginationItem from \"./PaginationItem/PaginationItem\";\n\nconst pagination = props => {\n  let {\n    amountOfPages,\n    page: currentPage,\n    amountOfPaginationLinks: linksAmount\n  } = props.pagination;\n\n  let lastPage;\n  if (currentPage < 3) {\n    lastPage = currentPage + linksAmount;\n  }\n  if (currentPage > amountOfPages - 2) {\n    lastPage = amountOfPages + 1;\n  }\n  if (currentPage >= 3 && currentPage <= amountOfPages - 2) {\n    lastPage = currentPage + 3;\n  }\n  if (lastPage > amountOfPages) {\n    lastPage = amountOfPages + 1;\n  }\n\n  let pagination = (\n    <ul className=\"Pagination\">\n      <li>\n        <form className=\"Filters\">\n          <ul\n            className=\"Filters__list\"\n            style={{ margin: \"0\", marginRight: \"20px\" }}\n          >\n            <li\n              className=\"Filters__item\"\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\"\n              }}\n            >\n              <label\n                htmlFor=\"limit\"\n                style={{ width: \"200px\", marginRight: \"10px\" }}\n              >\n                Shows per page\n              </label>\n              <select\n                style={{ margin: \"0\" }}\n                onChange={props.onChangeNadler}\n                className=\"Filters__select\"\n                id=\"limit\"\n                name=\"limit\"\n                value={props.value}\n              >\n                <option value=\"5\">5</option>\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n              </select>\n            </li>\n          </ul>\n        </form>\n      </li>\n      {amountOfPages > 1 ? (\n        <React.Fragment>\n          {\" \"}\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--start\",\n                {\n                  \"Pagination__link--disabled\": currentPage === 1\n                }\n              )}\n              to=\"/?page=1\"\n              onClick={() => props.onClickHandler(1)}\n            >\n              <span className=\"visually-hidden\">To the beginning</span>\n            </Link>\n          </li>\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--previous\",\n                {\n                  \"Pagination__link--disabled\": currentPage === 1\n                }\n              )}\n              to={\"/?page=\" + (currentPage - 1)}\n              onClick={() => props.onClickHandler(currentPage - 1)}\n            >\n              <span className=\"visually-hidden\"> Previous page</span>\n            </Link>\n          </li>\n          {new Array(linksAmount)\n            .fill(0)\n            .map(number => {\n              lastPage--;\n              if (lastPage > 0) {\n                return (\n                  <PaginationItem\n                    key={lastPage}\n                    page={lastPage}\n                    currentPage={currentPage}\n                    onClick={props.onClickHandler}\n                  />\n                );\n              }\n              return \"\";\n            })\n            .reverse()}\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--next\",\n                {\n                  \"Pagination__link--disabled\": currentPage === amountOfPages\n                }\n              )}\n              to={\"/?page=\" + (currentPage + 1)}\n              onClick={() => props.onClickHandler(currentPage + 1)}\n            >\n              <span className=\"visually-hidden\"> Next page</span>\n            </Link>\n          </li>\n          <li className=\"Pagination__item\">\n            <Link\n              className={classnames(\n                \"Pagination__link  Pagination__link--nav  Pagination__link--end\",\n                {\n                  \"Pagination__link--disabled\": currentPage === amountOfPages\n                }\n              )}\n              to={\"/?page=\" + amountOfPages}\n              onClick={() => props.onClickHandler(amountOfPages)}\n            >\n              <span className=\"visually-hidden\">To the end</span>\n            </Link>\n          </li>{\" \"}\n        </React.Fragment>\n      ) : (\n        \"\"\n      )}\n    </ul>\n  );\n\n  return <React.Fragment>{pagination}</React.Fragment>;\n};\n\nexport default pagination;\n","import React from \"react\";\n\nconst filters = props => {\n  let currentYear = new Date().getFullYear() + 1;\n  return (\n    <form className=\"Filters\">\n      <ul className=\"Filters__list\">\n        <li className=\"Filters__item\">\n          <label htmlFor=\"category\">Category</label>\n          <select\n            className=\"Filters__select\"\n            id=\"category\"\n            name=\"category\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.category}\n          >\n            <option value=\"trending\">trending</option>\n            <option value=\"popular\">popular</option>\n            <option value=\"anticipated\">anticipated</option>\n          </select>\n        </li>\n        <li className=\"Filters__item\">\n          <label htmlFor=\"ratings\">Ratings</label>\n          <select\n            className=\"Filters__select\"\n            id=\"ratings\"\n            name=\"ratings\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.ratings}\n          >\n            <option value=\"75-100\">7.5 - 10</option>\n            <option value=\"50-74\">5- 7.4</option>\n            <option value=\"0-50\">Less than 5</option>\n          </select>\n        </li>\n        <li className=\"Filters__item\">\n          <label htmlFor=\"years\">Year</label>\n          <select\n            className=\"Filters__select\"\n            id=\"years\"\n            name=\"years\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.years}\n          >\n            {new Array(10).fill(0).map((item, index) => {\n              item = --currentYear;\n              return (\n                <option key={index} value={item}>\n                  {item}\n                </option>\n              );\n            })}\n          </select>\n        </li>\n        <li className=\"Filters__item\">\n          <label htmlFor=\"status\">Status</label>\n          <select\n            className=\"Filters__select\"\n            id=\"status\"\n            name=\"status\"\n            onChange={props.onFilterChangeHadnler}\n            value={props.values.status}\n          >\n            <option value=\"returning series\">returning series</option>\n            <option value=\"ended\">ended</option>\n          </select>\n        </li>\n      </ul>\n    </form>\n  );\n};\n\nexport default filters;\n","import React from \"react\";\n\nconst tableHeader = (props) => {\n  return (\n    <thead>\n      <tr className=\"Table__tr\">\n        <th className=\"Table__th  Table__th--number\">Number</th>\n        <th className=\"Table__th  Table__th--poster\">Poster</th>\n        <th className=\"Table__th  Table__th--title\">Title</th>\n        <th className=\"Table__th  Table__th--description\">Description</th>\n        <th className=\"Table__th\">episodes</th>\n        <th className=\"Table__th\">Rating</th>\n        <th className=\"Table__th\">Year</th>\n        <th className=\"Table__th  Table__th--genres\">Genres</th>\n        <th className=\"Table__th Table__th--status\">Status</th>\n      </tr>\n    </thead>\n  );\n};\n\nexport default tableHeader;\n","import React from \"react\";\n\nconst show = props => {\n  const defaultPoster =\n    \"https://st.kp.yandex.net/images/movies/poster_none.png\";\n\n  const description = props.show.overview\n    ? props.show.overview.length >= 100\n      ? props.show.overview.slice(0, 100) + \"...\"\n      : props.show.overview\n    : \"There is no description for this show\";\n  return (\n    <tr className=\"Table__tr\">\n      <td className=\"Table__td\">{props.number}</td>\n      <td className=\"Table__td\">\n        <img\n          src={props.show.poster ? props.show.poster : defaultPoster}\n          alt={props.show.title}\n          width=\"200\"\n          height=\"200\"\n        />\n      </td>\n      <td className=\"Table__td\">{props.show.title}</td>\n      <td className=\"Table__td  Table__td--description\">{description}</td>\n      <td className=\"Table__td  Table__td--episodes\">{props.show.aired_episodes}</td>\n      <td className=\"Table__td\">{props.show.rating === 0 ? 'not rated yet' : (props.show.rating ? props.show.rating.toFixed(2) : '')}</td>\n      <td className=\"Table__td\">{props.show.year}</td>\n      <td className=\"Table__td\">{props.show.genres ? props.show.genres.join(\", \") : ''}</td>\n      <td className=\"Table__td\">{props.show.status}</td>\n    </tr>\n  );\n};\n\nexport default show;\n","import React from \"react\";\n\nimport Show from \"./Show/Show\";\n\nconst showsList = props => (\n  <React.Fragment>\n    {props.shows.map((show, index) => (\n      <Show key={index} number={index + 1} show={show} />\n    ))}\n  </React.Fragment>\n);\n\nexport default showsList;\n","import React from \"react\";\n\n\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport ShowsList from \"./ShowsList/ShowsList\";\n\nconst table = (props) => {\n  return (\n    <table className=\"Table\">\n    <TableHeader />\n    <tbody>\n      <ShowsList shows={props.shows} />\n    </tbody>\n  </table>\n  );\n}\n \nexport default table;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { fetchShows, sortShows } from \"../../store/actions/showsActions\";\nimport {\n  setCurrentPage,\n  setCurrentLimit\n} from \"../../store/actions/paginationActions\";\nimport { setSortingFilters } from \"../../store/actions/sortActions\";\nimport { setSearchQuery } from \"../../store/actions/searchActions\";\n\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport Filters from \"../../components/Filters/Filters\";\nimport Table from \"../../components/Table/Table\";\nimport SearchField from \"../../components/common/SearchField/SearchField\";\nimport Spinner from \"../../components/common/Spinner/Spinner\";\n\nclass Sorting extends Component {\n  state = {\n    search: \"\"\n  };\n  componentDidMount() {\n    let { page, itemsPerPage: limit } = this.props.pagination;\n    let { category: showType, ...filters } = this.props.sorting;\n    let queryString = this.props.location.search.split(\"&\");\n\n    console.log(queryString);\n    if (queryString.length !== 1) {\n      for (let param of queryString) {\n        let queryParameter = param.replace(\"?\", \"\").split(\"=\");\n        if (queryParameter[0] === \"page\") {\n          this.props.setCurrentPage(queryParameter[1]);\n          page = encodeURIComponent(queryParameter[1]);\n        } else if (queryParameter[0] === \"limit\") {\n          this.props.setCurrentLimit(queryParameter[1]);\n          limit = encodeURIComponent(queryParameter[1]);\n        } else if (queryParameter[0] === \"category\") {\n          showType = encodeURIComponent(queryParameter[1]);\n          this.props.setSortingFilters(\n            queryParameter[0],\n            showType);\n        } else {\n          this.props.setSortingFilters(\n            queryParameter[0],\n            decodeURIComponent(queryParameter[1])\n          );\n          filters[queryParameter[0]] = decodeURIComponent(queryParameter[1]);\n        }\n      }\n    }\n    this.props.fetchShows(page, limit, showType, filters);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let { page, itemsPerPage: limit, amountOfPages } = nextProps.pagination;\n    const { category: showType, ...filters } = nextProps.sorting;\n    if (page !== this.props.pagination.page) {\n      let filtersString = \"\";\n      for (let filter of Object.keys(filters)) {\n        filtersString += `&${filter}=${filters[filter]}`;\n      }\n      this.props.history.replace(\n        `/?page=${page}&limit=${limit}&category=${showType}${filtersString}`\n      );\n      this.props.fetchShows(page, limit, showType, filters);\n    }\n    if (\n      limit !== this.props.pagination.itemsPerPage ||\n      showType !== this.props.sorting.category ||\n      filters.years !== this.props.sorting.years ||\n      filters.ratings !== this.props.sorting.ratings ||\n      filters.status !== this.props.sorting.status\n    ) {\n      let filtersString = \"\";\n      for (let filter of Object.keys(filters)) {\n        filtersString += `&${filter}=${filters[filter]}`;\n      }\n      this.props.history.replace(\n        `/?page=${page}&limit=${limit}&category=${showType}${filtersString}`\n      );\n      this.props.fetchShows(page, limit, showType, filters);\n    }\n    if (amountOfPages && amountOfPages < page) {\n      this.props.setCurrentPage(amountOfPages);\n      let filtersString = \"\";\n      for (let filter of Object.keys(filters)) {\n        filtersString += `&${filter}=${filters[filter]}`;\n      }\n      this.props.history.replace(`/?page=${amountOfPages}&limit=${limit}&category=${showType}${filtersString}`);\n    }\n  }\n\n  onFilterChangeHandler = evt => {\n    evt.preventDefault();\n    const { name, value } = evt.target;\n    this.props.setCurrentPage(1);\n    this.props.setSortingFilters(name, encodeURIComponent(value));\n  };\n\n  onPaginationSelectChangeHandler = evt => {\n    evt.preventDefault();\n    const { value } = evt.target;\n    this.setState({isUpdated: true});\n    this.props.setCurrentLimit(value);\n  };\n\n  onSearchInputChangeHandler = evt => {\n    evt.preventDefault();\n    this.setState({ search: evt.target.value });\n  };\n\n  onSubmitSearchHandler = evt => {\n    const { search } = this.state;\n    evt.preventDefault();\n    this.props.setSearchQuery(search);\n    this.props.history.push(`/search?query=${search}`);\n    this.setState({ search: \"\" });\n  };\n\n  onClickHandler = page => {\n    this.props.setCurrentPage(page);\n    this.setState({isUpdated: true});\n  };\n\n  render() {\n    const { shows, loading } = this.props.shows;\n    let content = (\n      <React.Fragment>\n        <Filters\n          onFilterChangeHadnler={this.onFilterChangeHandler}\n          values={this.props.sorting}\n        />\n        <div className=\"flex-wrapper\">\n          <SearchField\n            onChangeHandler={this.onSearchInputChangeHandler}\n            onSubmitHandler={this.onSubmitSearchHandler}\n            value={this.state.search}\n          />\n          <Pagination\n            pagination={this.props.pagination}\n            onClickHandler={this.onClickHandler}\n            onChangeNadler={this.onPaginationSelectChangeHandler}\n            value={this.props.pagination.itemsPerPage}\n          />\n        </div>\n        <Table shows={shows} />\n      </React.Fragment>\n    );\n    if (loading || shows === null) {\n      content = <Spinner />;\n    }\n    // if (Array.isArray(shows) && shows.length === 0) {\n    //   console.log('hey');\n    //   content = <p>No mathing shows found</p>\n    // }\n    return <div>{content}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  shows: state.shows,\n  pagination: state.pagination,\n  sorting: state.sorting\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchShows,\n    sortShows,\n    setCurrentPage,\n    setCurrentLimit,\n    setSearchQuery,\n    setSortingFilters\n  }\n)(withRouter(Sorting));\n","import { traktConfig, baseUrl } from \"../../config/trakt-api-config\";\nimport { idPosterConfig, posterConfig } from \"../../config/TMDB-config\";\nimport {\n  FETCH_SHOWS_INFO_START,\n  FETCH_SHOWS_SUCCESS,\n  FETCH_SHOWS_INFO_FAILED,\n  FETCH_POSTER_SUCCESS,\n  SORT_SHOWS,\n  GET_ERRORS\n} from \"./actionTypes\";\n\nimport { getAmountOfPages } from \"./paginationActions\";\n\nexport const sortShows = (shows) => {\n  return {\n    type: SORT_SHOWS,\n    shows: shows\n  }\n}\n\nconst fetchShowsInfoStart = () => {\n  return {\n    type: FETCH_SHOWS_INFO_START\n  };\n};\n\nconst fetchShowsSuccess = shows => {\n  return {\n    type: FETCH_SHOWS_SUCCESS,\n    shows\n  };\n};\n\n\nconst fetchShowsInfoFailed = () => {\n  return {\n    type: FETCH_SHOWS_INFO_FAILED\n  };\n};\n\nconst fetchPosterSuccess = showsWithPoster => {\n  return {\n    type: FETCH_POSTER_SUCCESS,\n    showsWithPoster\n  };\n};\n\nexport const fetchPosters = shows => {\n  return dispatch => {\n    // set loading to true\n    dispatch(fetchShowsInfoStart());\n    // Create array of Promises to fetch posters\n    const posterPromises = shows.map(show => {\n      //create url with poster id\n      let posterUrl = `${idPosterConfig.baseUrl}${\n        show.ids.tmdb\n      }/images?api_key=${idPosterConfig.apiKeyTMDB}`;\n      return fetch(posterUrl).then(response => response.json());\n    });\n    Promise.all(posterPromises)\n      .then(resArray => {\n        // Add poster property to show object\n        const showsWithPosters = shows.map((show, index) => {\n          const filePath = resArray[index].posters[0].file_path;\n          // Create url with poster\n          const getPosterUrl = `${posterConfig.baseUrl}${\n            posterConfig.posterSize\n          }/${filePath}`;\n          show.poster = getPosterUrl;\n          return show;\n        });\n        dispatch(fetchPosterSuccess(showsWithPosters));\n      })\n      .catch(err => {\n        dispatch(fetchShowsInfoFailed());\n        dispatch({\n          type: GET_ERRORS,\n          errors: `Can not get posters from TMDB api`\n        });\n      });\n  };\n};\n\nexport const fetchShows = (page, limit, showType, filters) => {\n  return dispatch => {\n    // Changes loading property to True and shows Spinner during loading process\n    dispatch(fetchShowsInfoStart());\n\n    // Retrieves tv shows with pagination and filters. Also gets shows id.\n    // const paginationUrl = `https://api.trakt.tv/shows/${showType}?page=${page}&limit=${limit}`;\n    let filtersString = Object.keys(filters).map(filter => `${filter}=${filters[filter]}`).join('&');\n    if (filtersString.length > 0) {\n      filtersString = '&' + filtersString;\n    }\n    const sortUrl = `${baseUrl}${showType}?extended=full&page=${page}&limit=${limit}${filtersString}`; //&ratings=70-100\n    fetch(sortUrl, traktConfig)\n      .then(res => {\n        for (let header of res.headers.entries()) {\n          if (header[0] === 'x-pagination-page-count') {\n            const amountOfPages = header[1];\n            dispatch(getAmountOfPages(amountOfPages));\n          }\n        }\n        return res.json();\n      })\n      .then(res => {\n        if (showType === 'trending' || showType === 'anticipated') {\n          res = Array.from(res).map(show => show.show);\n        }\n        dispatch(fetchShowsSuccess(res));\n        dispatch(fetchPosters(res));\n        // const showId = res[0].show.ids.tmdb;\n        // this.getPoster(showId);\n      })\n      .catch(err => {\n        dispatch(fetchShowsInfoFailed());\n        dispatch({\n          type: GET_ERRORS,\n          errors: 'Can not get shows from track api'\n        });\n      });\n  };\n};\n","import {\n  GET_AMOUNT_OF_PAGES,\n  SET_CURRENT_PAGE,\n  SET_CURRENT_LIMIT\n} from \"./actionTypes\";\n\nexport const getAmountOfPages = pagesAmount => {\n  return {\n    type: GET_AMOUNT_OF_PAGES,\n    pagesAmount: +pagesAmount\n  };\n};\n\nexport const setCurrentPage = page => {\n  return {\n    type: SET_CURRENT_PAGE,\n    page: +page\n  };\n};\n\nexport const setCurrentLimit = limit => {\n  return {\n    type: SET_CURRENT_LIMIT,\n    limit: +limit\n  };\n};\n","import { SET_SORTING_FILTERS } from \"./actionTypes\";\n\n\nexport const setSortingFilters = (name, value) => {\n    return {\n        type: SET_SORTING_FILTERS,\n        name,\n        value\n    }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store/store\";\n\nimport AppTitle from \"./components/AppTitle/AppTitle\";\nimport Container from \"./components/Container/Container\";\nimport Search from \"./containers/Search/Search\";\nimport Sorting from \"./containers/Sorting/Sorting\";\n\nimport \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Container>\n              <AppTitle />\n              <Route path=\"/\" exact component={Sorting} />\n              <Route path=\"/search\" component={Search} />\n            </Container>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}